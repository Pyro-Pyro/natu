#? stdtmpl(emit="f.write") | standard
#proc writeBackgroundsNim(f: File; bgRows: seq[BgRow]; bgDatas: seq[BgData]) =
${"# Generated by natu on " & now().format("yyyy-MM-dd 'at' HH:mm")}

import natu/[core]

type
  BgKind* = enum
    bkReg4bpp  ## Regular background, 16 colors per-tile
    bkReg8bpp  ## Regular background, 256 colors
    bkAff      ## Affine background, 256 colors
  
  BgData* = object
    kind: BgKind
    w, h: int
    imgWords: uint16
    mapWords: uint16
    palHalfwords: uint16
    palOffset: uint16
    tileOffset: uint16
  
  Background* = enum
    #for b in bgRows:
    ${b.name}
    #end for

#for b in bgRows:
{.compile:"./backgrounds/${b.name}.c".}
#end for
{.compile:"./backgrounds.c".}

let bgImgData {.importc:"natuBgImgData", codegenDecl:"extern const $$# $$#".}: array[Background, cstring]
let bgMapData {.importc:"natuBgMapData", codegenDecl:"extern const $$# $$#".}: array[Background, cstring]
let bgPalData {.importc:"natuBgPalData", codegenDecl:"extern const $$# $$#".}: array[Background, cstring]


const staticBgData: array[Background, BgData] = [
  #for i,b in bgRows:
  ${b.name}: BgData${bgDatas[i]},
  #end for
]
