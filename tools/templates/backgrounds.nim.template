#? stdtmpl(emit="f.write") | standard
#proc writeBackgroundsNim(f: File; bgRows: seq[BgRow]; bgDatas: seq[BgData]) =
${"# Generated by natu on " & now().format("yyyy-MM-dd 'at' HH:mm")}

import natu/[core]
import natu/kit/types

type
  Background* = enum
    #for b in bgRows:
    ${b.name}
    #end for

#for b in bgRows:
{.compile:"./backgrounds/${b.name}.c".}
#end for
{.compile:"./backgrounds.c".}

let natuBgImgData {.importc, codegenDecl:"extern const $$# $$#".}: array[Background, cstring]
let natuBgMapData {.importc, codegenDecl:"extern const $$# $$#".}: array[Background, cstring]
let natuBgPalData {.importc, codegenDecl:"extern const $$# $$#".}: array[Background, cstring]

const staticBgData: array[Background, BgData] = [
  #for i,b in bgRows:
  ${b.name}: BgData${bgDatas[i]},
  #end for
]

template data*(bg: Background): BgData = staticBgData[bg]
template palDataPtr*(bg: Background): pointer = natuBgPalData[bg]
template mapDataPtr*(bg: Background): pointer = natuBgMapData[bg]
template imgDataPtr*(bg: Background): pointer = natuBgImgData[bg]
