#? stdtmpl(emit="f.write") | standard
#proc writeGraphicsNim(f:File, gfxRows: seq[GraphicRow], gfxDatas: seq[GraphicData], numPalettes, palDataLen, imgDataLen: int) =
${"# Generated by natu on " & now().format("yyyy-MM-dd 'at' HH:mm")}

import natu/[core, oam]

type
  GraphicData* = object
    bpp*: int
    size*: ObjSize
    w*, h*: int
    imgPos*: int
    imgWords*: int
    palNum*: int
    palPos*: int
    palHalfwords*: int
    frames*: int
    frameWords*: int
  Graphic* = enum
    #for g in gfxRows:
    ${g.name},
    #end for

{.compile:"./gfx.c".}

let palData {.importc:"natuGfxPalData", extern:"natuGfxPalData", codegenDecl:"extern const $$# $$#".}: array[$palDataLen, char]
let imgData {.importc:"natuGfxImgData", extern:"natuGfxImgData", codegenDecl:"extern const $$# $$#".}: array[$imgDataLen, char]

const numPalettes = ${numPalettes}

const staticGfxData: array[Graphic, GraphicData] = [
  #for i,g in gfxRows:
  ${g.name}: GraphicData${gfxDatas[i]},
  #end for
]
